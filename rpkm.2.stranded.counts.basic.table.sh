#/usr/local/bin/bash	

set -e

if [ $# -ne 3 ]
then
    echo -e "\nusage: $0   <in.bam>   <in.gff>   <outprefix>\n"
    echo -e "DESCRIPTION: This script provides an easy way to count reads and calculate RPKM values *for each strand*\n"
    echo -e "It uses a bam file from the reads' alignment and a gff file with the annotation\n"
    echo "GFF is TAB separated and should look like:"
    echo "Schisto_mansoni.Chr_1.unplaced.SC_0010        chado   exon    9513    9784    .       +       .       Smp_137360.1"
    echo "Schisto_mansoni.Chr_1.unplaced.SC_0010        chado   exon    14110   14416   .       +       .       Smp_137360.1"
    echo -e "Schisto_mansoni.Chr_1.unplaced.SC_0010     chado   exon    121509  121525  .       +       .       Smp_027990.1\n"
    echo -e "ASSUMPTIONS -> quality score filtering > 30"
    echo -e "LIMITATIONS -> considers only reads mapping to exons\n"
    echo -e "This script is based on Jason's RPKM script, and assumes you've prepped the BAM in the same way, so use Jason's BAM input script first!"
    exit
fi

inbam=$1
gff_in=$2
outprefix=$3

##Get reads that map to plus and minus strands, using XS tags

samtools view -H $inbam > $outprefix.plus.strand.sam
samtools view -F 4 $inbam | perl -nle 'print if /XS\:A\:\+/' >> $outprefix.plus.strand.sam
samtools view -Sb $outprefix.plus.strand.sam > $outprefix.plus.strand.bam
echo -e "Made plus bam"

samtools view -H $inbam > $outprefix.minus.strand.sam
samtools view -F 4 $inbam | perl -nle 'print if /XS\:A\:\-/' >> $outprefix.minus.strand.sam
samtools view -Sb $outprefix.minus.strand.sam > $outprefix.minus.strand.bam
echo -e "Made minus bam"

##Get count all the reads that are mapping to gene models, on both strands

~jit/bin/BEDTools-Version-2.10.1/bin/coverageBed -abam $inbam -b $gff_in | sort -k9,9b | ~jit/bin/BEDTools-Version-2.10.1/bin/groupBy -g 9 -c 12,10 -o sum,sum > $inbam.BEDcoverage.$$.tmp
ls -lh $inbam.BEDcoverage.$$.tmp
sum_all=$(awk '{sum+=$3} END{print sum}' $inbam.BEDcoverage.$$.tmp)
#echo -e Total for both: $sum_all
echo -e "Counted all the mapped reads"

##Get RPKM values for the plus stand

~jit/bin/BEDTools-Version-2.10.1/bin/coverageBed -abam $outprefix.plus.strand.bam -b $gff_in | sort -k9,9b | ~jit/bin/BEDTools-Version-2.10.1/bin/groupBy -g 9 -c 12,10 -o sum,sum > $outprefix.plus.BEDcoverage.$$.tmp
echo -e "Just ran Jason's fancy awk command for plus strand"

#sum1=`awk '{sum+=$3} END{print sum}' $outprefix.plus.BEDcoverage.$$.tmp`
#echo -e Total plus: $sum1
echo -e gene_id"\t"length_nt"\t"plus_strand_read_counts"\t"plus_strand_RPKM > $outprefix.plus.BEDcoverage.final.count
awk -vs=$sum_all '{print $0"\t"(10^9*$3)/($2*s) }' $outprefix.plus.BEDcoverage.$$.tmp >> $outprefix.plus.BEDcoverage.final.count
echo -e "Added stuff from .tmp to .final count for plus strand"

echo -e "\nQC - any gene IDs listed more than 1x will appear below here:"
echo -e "----------------------------------------------------------------"
cut -f 1 $outprefix.plus.BEDcoverage.final.count | sort | uniq -d
echo -e "----------------------------------------------------------------"
echo -e "If there are no gene IDs reported above here: everything's great."
echo -e "If there ARE gene IDs reported above here: try sorting the BAM generated by the 1st script tophat1.bam2BEDtools.auto.sh and re-run this script, or combine values per tag with script /nfs/users/nfs_b/bf3/bin/calculateSumPerTag_02.pl, ...\n"


##Get RPKM values for the minus stand

~jit/bin/BEDTools-Version-2.10.1/bin/coverageBed -abam $outprefix.minus.strand.bam -b $gff_in | sort -k9,9b | ~jit/bin/BEDTools-Version-2.10.1/bin/groupBy -g 9 -c 12,10 -o sum,sum > $outprefix.minus.BEDcoverage.$$.tmp
echo -e "Just ran Jason's fancy awk command for the minus strand"

#sum2=`awk '{sum+=$3} END{print sum}' $outprefix.minus.BEDcoverage.$$.tmp`
#echo -e Total minus: $sum2
echo -e gene_id"\t"length_nt"\t"minus_strand_read_counts"\t"minus_strand_RPKM > $outprefix.minus.BEDcoverage.final.count
awk -vs=$sum_all '{print $0"\t"(10^9*$3)/($2*s) }' $outprefix.minus.BEDcoverage.$$.tmp >> $outprefix.minus.BEDcoverage.final.count
echo -e "Added stuff from .tmp to .final count for minus strand"

echo -e "\nQC - any gene IDs listed more than 1x will appear below here:"
echo -e "----------------------------------------------------------------"
cut -f 1 $outprefix.minus.BEDcoverage.final.count | sort | uniq -d
echo -e "----------------------------------------------------------------"
echo -e "If there are no gene IDs reported above here: everything's still going great."
echo -e "If there ARE gene IDs reported above here: try sorting the BAM generated by the 1st script tophat1.bam2BEDtools.auto.sh and re-run this script, or combine values per tag with script /nfs/users/nfs_b/bf3/bin/calculateSumPerTag_02.pl, ...\n"


#Get gene_id, strand of gene, and plus and minus RPKM values all into one file
cut -f7,9 $2 > $outprefix.get_strands_1.tmp #get strand and gene id for all exons
sort $outprefix.get_strands_1.tmp > $outprefix.get_strands_2.tmp 
uniq $outprefix.get_strands_2.tmp > $outprefix.get_strands_3.tmp #collapse to one row per gene, to same format as RPKM output files
echo -e strand"\t"gene_id > $outprefix.get_strands_4.tmp #add header row, so lines up with above outpucut 
cat $outprefix.get_strands_4.tmp $outprefix.get_strands_3.tmp > $outprefix.get_strands_5.tmp #header and gff in one file
echo -e "Done some parsing"

cut -f2 $outprefix.get_strands_5.tmp > $outprefix.col1.gather.tmp #gene_id
cut -f1 $outprefix.get_strands_5.tmp > $outprefix.col2.gather.tmp #strand
cut -f2 $outprefix.plus.BEDcoverage.final.count > $outprefix.col3.gather.tmp #length_nt
cut -f3 $outprefix.plus.BEDcoverage.final.count > $outprefix.col4.gather.tmp #plus_strand_read_count
cut -f3 $outprefix.minus.BEDcoverage.final.count > $outprefix.col5.gather.tmp #minus_strand_read_count
cut -f4 $outprefix.plus.BEDcoverage.final.count > $outprefix.col6.gather.tmp #plus_strand_rpkm
cut -f4 $outprefix.minus.BEDcoverage.final.count > $outprefix.col7.gather.tmp #minus_strand_rpkm
paste $outprefix.col*.gather.tmp >$outprefix.readcount.rpkm.plus.minus.txt
echo -e "Done cut and paste"

##You should always tidy up after yourself!
rm $outprefix.*.tmp
rm $outprefix.*.sam
rm $outprefix.*.bam
rm $outprefix.*.final.count
echo -e "Just tidied those .tmp files away"
echo -e "All done!"
